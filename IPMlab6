#include <Windows.h>
#include <iostream>
#include <fstream>
#include <string>
#include <vector>

using namespace std;

std::string Hash_Stribog(string inp_data)
{
	int n = 8;
	string data = inp_data;
	if (data.length() > n)
	{
		for (int i = n; i < inp_data.length(); i++) {
			if (i % 8 == 0)
			{
				data.insert(n + i, "-");
			}
		}
	}
	while (data.length() % n != 0)
	{
		data = data + "0";
	}
	return data;
}


std::vector<float> EDS(string inp_data)
{
	std::cout << "inp_data = " << inp_data << std::endl;

	int p = 13;

	// elliptic curve
	int a = 2;
	int b = 3;
	float J = int(1728 * (4 * pow(a, 3) / (4 * pow(a, 3) + 27 * pow(b, 2)))) % p;

	int m = 5;
	int q = 11;
	float P[2] = {1, 2};
	int d = 10; // 0 < d < q

	// encrypt data
	string data = Hash_Stribog(inp_data);

	std::cout << "hashed data = " << data << std::endl;

	float e = data.length() % q;
	if (e == 0) { e = 1; }
	int k = 9; // 0 < k < q

	int C[2];
	C[0] = k * P[0]; 
	C[1] = k * P[1];

	float r = C[0] % q;
	float s = int(r * d + k * e) % q;

	std::vector<float> DS(2);
	DS.push_back(r);
	DS.push_back(s);
	
	return DS;
}


int main()
{
	SetConsoleCP(1251);
	SetConsoleOutputCP(1251);
  
  	// lab6
	// EDS
	string data = "00001110001011000001111000001110110001111";
	EDS(data);

	return 0;
}
