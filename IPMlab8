#include <Windows.h>
#include <iostream>
#include <fstream>
#include <string>
#include <vector>

#define _USE_MATH_DEFINES
#include <math.h>

using namespace std;


float * DCT(float D[16][8])
{
	float temp = 0;
	float U = 0, V = 0;
	const int N = 8, M = 8;
	float out[N][M];
	for (int v = 0; v < N; v++) {
		for (int u = 0; u < M; u++) {
			if (v == 0) 
			{
				V = sqrt(1 / N);
			}
			else
			{
				V = 1;
			}
			if (u == 0)
			{
				U = sqrt(1 / M);
			}
			else
			{
				U = 1;
			}
			temp = 0;
			for (int i = 0; i < N; i++) {
				for (int j = 0; i < M; i++) {
					temp = temp + D[i][j] * cos((M_PI * (2 * i + 1) * u) / 2 * N) * cos((M_PI * (2 * j + 1) * v) / 2 * M);
				}
			}
			out[v][u] = U * V * temp / (sqrt(2 * N));
		}
	}

	return out;
}


float * FCM(float inp_data[16][8])
{
	float R, G, B;
	float Y = 0 + 0.299 * R + 0.587 * G + 0.114 * B;
	float Cb = 128 - 0.168736 * R - 0.331264 * G + 0.5 * B;
	float Cr = 128 + 0.5 * R - 0.418688 * G - 0.081312 * B;

	//
	const int q = 16; // inp_data.length()
	const int n = 8;
	float D[q][n];
	for (int i = 0; i < q; i++) {
		for (int j = 0; j < n; j++) {
			D[i][j] = inp_data[i	][j];
		}
	}

	float *Dnew = DCT(D);

	return Dnew;
}


int main()
{
	SetConsoleCP(1251);
	SetConsoleOutputCP(1251);

	// lab8
	// FCM
	float* data = {};
	FCM(data);

	return 0;
}
